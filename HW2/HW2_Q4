{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"HW2_Q4","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPgKigzgDKy8bTsYkkthQMb"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"xuUbT0_w_XGk","colab_type":"text"},"source":["#Imports and Data"]},{"cell_type":"code","metadata":{"id":"cZPDtgdo_Mzs","colab_type":"code","colab":{}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from tensorflow import keras\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.model_selection import cross_val_score\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import pairwise_distances\n","from scipy.spatial.distance import cosine\n","import sklearn.decomposition"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fUo22OEb_att","colab_type":"code","colab":{}},"source":["fashion_mnist = keras.datasets.fashion_mnist\n","(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()\n","X_train = train_images\n","X_test = test_images\n","\"\"\"\n","0\tT-shirt/top\n","1\tTrouser\n","2\tPullover\n","3\tDress\n","4\tCoat\n","5\tSandal\n","6\tShirt\n","7\tSneaker\n","8\tBag\n","9\tAnkle boot\n","\"\"\"\n","\n","label_names=['T-shirt/top','Trouser','Pullover','Dress','Coat','Sandal',\n","             'Shirt','Sneaker','Bag','Ankle boot']\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JedQnNWV_1iC","colab_type":"text"},"source":["#2DLDA"]},{"cell_type":"code","metadata":{"id":"2RiK1k_yFPzq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1599438277403,"user_tz":420,"elapsed":2043,"user":{"displayName":"Cory Sweet","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgMgINQ5Ht3ArguqKiYUOrLQ1OOzmv-kARQDmWe=s64","userId":"10168571728224411171"}},"outputId":"ddf17629-4033-4683-b13e-8cdc5830f1a5"},"source":["for i in range(50):\n","    L_prev = L.copy()\n","    SwR=np.zeros(X_tilda.shape)\n","    for i in range(X_tilda.shape[0]):\n","        A = X_tilda[i,:,:].dot(R)\n","        SwR[i,:,:] = A.dot(A.T)\n","    SwR = np.sum(SwR, axis = 0)\n","\n","    #finds SbR\n","    SbR = np.zeros([10,28,28])\n","    for i in range(10):\n","        A = (globals()['M' +str(i)] - M).dot(R)   \n","        SbR[i,:,:] = 6000*A.dot(A.T)\n","    SbR = np.sum(SbR, axis=0)\n","\n","    A = (np.linalg.inv(SwR)).dot(SbR)\n","    evals, evecs = np.linalg.eig(A) #cols of evecs are the eigen vectors\n","    L = evecs[:,:b]\n","    L = np.real(L) \n","\n","    ########################### L->R\n","    #finds SwL\n","    R_prev = R.copy()\n","    SwL=np.zeros(X_tilda.shape) \n","    for i in range(X_tilda.shape[0]):\n","        A = X_tilda[i,:,:]\n","        SwL[i,:,:] = (A.T).dot(L).dot(L.T).dot(A)\n","    SwL = np.sum(SwL, axis = 0)\n","\n","    #finds SbL\n","    SbL = np.zeros([10,28,28])\n","    for i in range(10):\n","        A = globals()['M' +str(i)] -M     \n","        SbL[i,:,:] = 6000*(A.T).dot(L).dot(L.T).dot(A)\n","    SbL = np.sum(SbL, axis=0)\n","\n","    A = (np.linalg.inv(SwL)).dot(SbL)\n","    evals, evecs = np.linalg.eig(A) #cols of evecs are the eigen vectors\n","    R = evecs[:,:b]\n","    R = np.real(R)   \n","\n","    if np.all( np.round(R,3) == np.round(R_prev,3)): break"],"execution_count":null,"outputs":[{"output_type":"stream","text":["9\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ek5YM_ItIm0Y","colab_type":"code","colab":{}},"source":["#transforms\n","Y_train = np.zeros([X_train.shape[0],b,b])\n","Y_test = np.zeros([X_test.shape[0],b,b])\n","for i in range(X_train.shape[0]):\n","    Y_train[i,:,:] = (L.T).dot(X_train[i,:,:].dot(R))\n","\n","for i in range(X_test.shape[0]):\n","    Y_test[i,:,:] = (L.T).dot(X_test[i,:,:].dot(R))\n","\n","#now vectorize\n","A = np.zeros([60000,b**2])\n","B = np.zeros([10000,b**2])\n","for i in range (60000):\n","    A[i,:] = Y_train[i,:,:].reshape([b**2])\n","for i in range (10000):\n","    B[i,:] = Y_test[i,:,:].reshape([b**2])\n","\n","Y_train = A\n","Y_test = B\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gchKjBiqJdMB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1599438344936,"user_tz":420,"elapsed":17167,"user":{"displayName":"Cory Sweet","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgMgINQ5Ht3ArguqKiYUOrLQ1OOzmv-kARQDmWe=s64","userId":"10168571728224411171"}},"outputId":"f8d219b9-6309-4c21-cdfe-6567ae646da2"},"source":["k=4\n","model = KNeighborsClassifier(n_neighbors=k)\n","model.fit(Y_train, train_labels)\n","y_preds = model.predict(Y_test)\n","score=accuracy_score(y_true=test_labels, y_pred=y_preds)\n","score"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8445"]},"metadata":{"tags":[]},"execution_count":62}]},{"cell_type":"markdown","metadata":{"id":"kDPGIAS79ZbZ","colab_type":"text"},"source":["#Now to loop through all of it"]},{"cell_type":"code","metadata":{"id":"2VJX5sRU9ceN","colab_type":"code","colab":{}},"source":["#initialize\n","M=np.mean(X_train[:,:,:] , axis=0)\n","\n","for j in range(10): #M0, M1...\n","    Mj='M'+str(j)\n","    exec('%s=%d' % ( Mj ,0 ))\n","    globals()[Mj] = np.mean(X_train[train_labels==j ,:,:] , axis=0)     \n","\n","X_tilda=np.zeros(X_train.shape)\n","for i in range(X_train.shape[0]):\n","    X_tilda[i,:,:] = X_train[i,:,:] - globals()['M' + str( train_labels[i] )]\n","\n","#loops\n","\n","for b in [6,8,10,12,14]:                                   #!!!!!!!!!!!!!\n","    R = np.eye(b)\n","    R = np.vstack( (R,np.zeros([28-b,b]) ))\n","    L = R.T\n","    #########!!!!!!!!!!!\n","    for i in range(50):\n","        L_prev = L.copy()\n","        SwR=np.zeros(X_tilda.shape)\n","        for i in range(X_tilda.shape[0]):\n","            A = X_tilda[i,:,:].dot(R)\n","            SwR[i,:,:] = A.dot(A.T)\n","        SwR = np.sum(SwR, axis = 0)\n","\n","        #finds SbR\n","        SbR = np.zeros([10,28,28])\n","        for i in range(10):\n","            A = (globals()['M' +str(i)] - M).dot(R)   \n","            SbR[i,:,:] = 6000*A.dot(A.T)\n","        SbR = np.sum(SbR, axis=0)\n","\n","        A = (np.linalg.inv(SwR)).dot(SbR)\n","        evals, evecs = np.linalg.eig(A) #cols of evecs are the eigen vectors\n","        L = evecs[:,:b]\n","        L = np.real(L) \n","\n","        ########################### L->R\n","        #finds SwL\n","        R_prev = R.copy()\n","        SwL=np.zeros(X_tilda.shape) \n","        for i in range(X_tilda.shape[0]):\n","            A = X_tilda[i,:,:]\n","            SwL[i,:,:] = (A.T).dot(L).dot(L.T).dot(A)\n","        SwL = np.sum(SwL, axis = 0)\n","\n","        #finds SbL\n","        SbL = np.zeros([10,28,28])\n","        for i in range(10):\n","            A = globals()['M' +str(i)] -M     \n","            SbL[i,:,:] = 6000*(A.T).dot(L).dot(L.T).dot(A)\n","        SbL = np.sum(SbL, axis=0)\n","\n","        A = (np.linalg.inv(SwL)).dot(SbL)\n","        evals, evecs = np.linalg.eig(A) #cols of evecs are the eigen vectors\n","        R = evecs[:,:b]\n","        R = np.real(R)   \n","\n","        if np.all( np.round(R,3) == np.round(R_prev,3)): break\n","\n","    #transforms\n","    Y_train = np.zeros([X_train.shape[0],b,b])\n","    Y_test = np.zeros([X_test.shape[0],b,b])\n","    for i in range(X_train.shape[0]):\n","        Y_train[i,:,:] = (L.T).dot(X_train[i,:,:].dot(R))\n","\n","    for i in range(X_test.shape[0]):\n","        Y_test[i,:,:] = (L.T).dot(X_test[i,:,:].dot(R))\n","\n","    #now vectorize\n","    A = np.zeros([60000,b**2])\n","    B = np.zeros([10000,b**2])\n","    for i in range (60000):\n","        A[i,:] = Y_train[i,:,:].reshape([b**2])\n","    for i in range (10000):\n","        B[i,:] = Y_test[i,:,:].reshape([b**2])\n","\n","    Y_train = A\n","    Y_test = B\n","\n","    #now model time:\n","    for k in range(1,13): #(1,13):                       !!!!!!!!!!!!!!!!!!!!!!!!\n","        model = KNeighborsClassifier(n_neighbors=k)\n","        model.fit(Y_train, train_labels)\n","        y_preds = model.predict(Y_test)\n","        score=accuracy_score(y_true=test_labels, y_pred=y_preds)\n","        score\n","        print(score,'B',b,'k',k)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zqFnkICeZzU-","colab_type":"code","colab":{}},"source":["\"\"\"\n","B 6 0.8283 k 1 0.8283\n","B 6 0.8245 k 2 0.8245\n","B 6 0.8411 k 3 0.8411\n","B 6 0.8445 k 4 0.8445\n","B 6 0.8466 k 5 0.8466\n","B 6 0.848 k 6 0.848\n","B 6 0.8468 k 7 0.8468\n","B 6 0.8447 k 8 0.8447\n","B 6 0.847 k 9 0.847\n","B 6 0.8464 k 10 0.8464\n","B 6 0.8498 k 11 0.8498\n","B 6 0.8488 k 12 0.8488\n","B 8 0.8446 k 1 0.8446\n","B 8 0.8409 k 2 0.8409\n","B 8 0.8508 k 3 0.8508\n","B 8 0.855 k 4 0.855\n","B 8 0.8529 k 5 0.8529\n","B 8 0.8541 k 6 0.8541\n","B 8 0.8569 k 7 0.8569\n","B 8 0.8554 k 8 0.8554\n","B 8 0.8568 k 9 0.8568\n","B 8 0.8563 k 10 0.8563\n","B 8 0.8555 k 11 0.8555\n","B 8 0.8549 k 12 0.8549\n","B 10 0.8537 k 1 0.8537\n","B 10 0.8516 k 2 0.8516\n","B 10 0.8597 k 3 0.8597\n","B 10 0.8623 k 4 0.8623\n","B 10 0.8634 k 5 0.8634\n","B 10 0.865 k 6 0.865\n","B 10 0.8644 k 7 0.8644\n","B 10 0.8638 k 8 0.8638\n","B 10 0.8646 k 9 0.8646\n","B 10 0.8649 k 10 0.8649\n","B 10 0.8634 k 11 0.8634\n","B 10 0.8615 k 12 0.8615\n","B 12 0.8597 k 1 0.8597\n","B 12 0.8537 k 2 0.8537\n","B 12 0.8633 k 3 0.8633\n","B 12 0.8647 k 4 0.8647\n","B 12 0.8675 k 5 0.8675\n","B 12 0.8688 k 6 0.8688\n","B 12 0.869 k 7 0.869\n","B 12 0.8685 k 8 0.8685\n","B 12 0.8666 k 9 0.8666\n","B 12 0.8661 k 10 0.8661\n","B 12 0.8662 k 11 0.8662\n","B 12 0.8669 k 12 0.8669\n","B 14 0.8593 k 1 0.8593\n","B 14 0.8566 k 2 0.8566\n","B 14 0.8677 k 3 0.8677\n","B 14 0.8663 k 4 0.8663\n","B 14 0.8665 k 5 0.8665\n","B 14 0.8688 k 6 0.8688\n","B 14 0.8684 k 7 0.8684\n","B 14 0.8675 k 8 0.8675\n","B 14 0.8667 k 9 0.8667\n","B 14 0.8666 k 10 0.8666\n","B 14 0.8649 k 11 0.8649\n","B 14 0.8657 k 12 0.8657\n","\"\"\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"79f2rPFbpZnT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1599797037208,"user_tz":420,"elapsed":2607,"user":{"displayName":"Cory Sweet","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgMgINQ5Ht3ArguqKiYUOrLQ1OOzmv-kARQDmWe=s64","userId":"10168571728224411171"}},"outputId":"318b6b4f-4831-47f6-ed33-9be9fc7242ed"},"source":["B6_acc = [0.8283,0.8245,0.8411,0.8445,0.8466,0.848,\n","          0.8468,0.8447,0.847,0.8464,0.8498,0.8488]\n","B8_acc = [0.8446,0.8409,0.8508,0.855,0.8529,0.8541,\n","          0.8569,0.8554,0.8568,0.8563,0.8555,0.8549]\n","B10_acc= [0.8537,0.8516,0.8597,0.8623,0.8634,0.865,\n","          0.8644,0.8638,0.8646,0.8649,0.8634,0.8615]\n","B12_acc= [0.8597,0.8537,0.8633,0.8647,0.8675,0.8688,\n","          0.869,0.8685,0.8666,0.8661,0.8662,0.8669]\n","B14_acc= [0.8593,0.8566,0.8677,0.8663,0.8665,0.8688,\n","          0.8684,0.8675,0.8667,0.8666,0.8649,0.8657]\n","\n","plt.plot(range(1,13), 1-np.array(B6_acc), '-bs', label='B = 6')\n","plt.plot(range(1,13), 1-np.array(B8_acc),'-rs', label = 'B = 8')\n","plt.plot(range(1,13), 1-np.array(B10_acc),'-gs', label = 'B = 10')\n","plt.plot(range(1,13), 1-np.array(B12_acc),'-ks', label = 'B = 12')\n","plt.plot(range(1,13), 1-np.array(B14_acc),'-cs', label = 'B = 14')\n","\n","plt.legend()\n","plt.xlabel('K')\n","plt.ylabel('Percent Error')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Percent Error')"]},"metadata":{"tags":[]},"execution_count":2},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"msCM0Br2U5fG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1599797038004,"user_tz":420,"elapsed":630,"user":{"displayName":"Cory Sweet","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgMgINQ5Ht3ArguqKiYUOrLQ1OOzmv-kARQDmWe=s64","userId":"10168571728224411171"}},"outputId":"363f8807-3534-4c24-f903-5df6a32bbd28"},"source":["KNN_acc = [0.852,0.8517,0.8601,0.8648,0.8618,0.8625,\n","           0.8626,0.8616,0.8609,0.8623,0.8595,0.8586]\n","\n","\n","plt.plot(range(1,13), 1-np.array(B12_acc),'-ks', label = 'B = 12')\n","plt.plot(range(1,13), 1-np.array(B14_acc),'-cs', label = 'B = 14')\n","plt.plot(range(1,13), 1-np.array(KNN_acc),'-rs', label = 'PCA(95%) + KNN')\n","\n","plt.legend()\n","plt.xlabel('K')\n","plt.ylabel('Percent Error')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Percent Error')"]},"metadata":{"tags":[]},"execution_count":3},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}